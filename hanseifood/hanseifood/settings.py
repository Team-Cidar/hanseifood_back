"""
Django settings for hanseifood project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import dotenv
import os
from pathlib import Path

import pymysql

dotenv.load_dotenv()

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%634mt3)+%$kyzlt%c7_h=b$ot$fa#7=*-&z2s7%45ggis1gf_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False if os.getenv("DEBUG", 'False') == 'False' else True

ALLOWED_HOSTS = ['localhost', 'react-builder', 'hanseifood_ws']


# Application definition

INSTALLED_APPS = [
    # django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'datas',
    'corsheaders',
    # 'logs',

    # my apps
    'food',

    # scheduler
    'django_apscheduler',
]

# for scheduler
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"

APSCHEDULER_RUN_NOW_TIMEOUT = 25  # default 최대 실행시간

SCHEDULER_DEFAULT = True

############

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'food.middlewares.ip_logging_middleware.IPLoggingMiddleware'
]

ROOT_URLCONF = 'hanseifood.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hanseifood.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hansei_food',
        'USER': os.getenv("DB_USER", 'hansei'),
        'PASSWORD': os.getenv("DB_PASSWORD", 'hansei_food'),
        'HOST': os.getenv("DB_HOST", 'mysql_service'),
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False  # True면 models의 datetime에 위 time zone이 반영되지 않음


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logger settings
if not os.path.exists(BASE_DIR / 'logs'):
    os.mkdir(BASE_DIR / 'logs')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '[%(asctime)s] %(name)s - %(levelname)s - %(message)s'
        },
    },
    'handlers': {
        'file_scheduler': {
            'level': 'INFO',
            'encoding': 'utf-8',
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5,
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs/scheduler.log',
            'formatter': 'standard'
        },
        'file_request': {
            'level': 'INFO',
            'encoding': 'utf-8',
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5,
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs/server.log',
            'formatter': 'standard'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        }
    },
    'loggers': {
        'food.core.schedulers.jobs.crawl_menu': {
            'handlers': ['console', 'file_scheduler'],
            'level': 'DEBUG'
        },
        'food.middlewares': {
            'handlers': ['console', 'file_request'],
            'level': 'INFO',
        },
        'food.utils.menus': {
            'handlers': ['console', 'file_request'],
            'level': 'INFO'
        },
        'food.utils.views': {
            'handlers': ['console', 'file_request'],
            'level': 'INFO'
        }
    }
}

CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = [
    'http://www.hanseiweeklymenu.me',
    'http://hanseiweeklymenu.me',
    'http://218.239.156.31',
    'http://localhost:8080',
    'http://localhost:80',
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)
CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)
APPEND_SLASH = False
